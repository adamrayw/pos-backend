// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id            String          @id @unique @default(uuid())
  nama_usaha    String?
  email         String          @unique
  password      String
  type          Type?
  expired       DateTime?
  createdAt     DateTime        @default(now())
  updatedAt     DateTime?
  subscriptions Subscriptions[]
  Kategori      Kategori[]
  Item          Item[]
  Transaksi     Transaksi[]
}

enum Type {
  Basic
  Pro
  Plus
}

model Item {
  id         String    @id @unique @default(uuid())
  kategori   Kategori? @relation(fields: [kategoriId], references: [id])
  kategoriId String?
  user       User?     @relation(fields: [userId], references: [id])
  userId     String?
  image      String
  name       String
  price      Int
  qty        Int       @default(1)
  createdAt  DateTime  @default(now())
  updatedAt  DateTime?
}

model Kategori {
  id        String    @id @unique @default(uuid())
  user      User?     @relation(fields: [userId], references: [id])
  userId    String?
  name      String
  createdAt DateTime  @default(now())
  updatedAt DateTime?
  items     Item[]
}

model Transaksi {
  id           String    @id @unique @default(uuid())
  transaksiId  String?   @unique
  user         User?     @relation(fields: [userId], references: [id])
  userId       String?
  menu         Json?
  total        Int
  token        String?
  redirect_url String?
  isPaid       Boolean
  createdAt    DateTime  @default(now())
  updatedAt    DateTime?
}

model Subscriptions {
  id           String    @id @unique @default(uuid())
  user         User?     @relation(fields: [userId], references: [id])
  userId       String?
  type         Type
  price        Int
  isPaid       Boolean
  redirect_url String?
  token        String?
  isActived    Boolean   @default(false)
  transaksiId  String?
  expired      DateTime?
  createdAt    DateTime  @default(now())
  updatedAt    DateTime?
}
